package es.eina.tfg.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Route service. Represents a row in the &quot;GL_Route&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link es.eina.tfg.model.impl.RouteModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link es.eina.tfg.model.impl.RouteImpl}.
 * </p>
 *
 * @author adelrioj
 * @see Route
 * @see es.eina.tfg.model.impl.RouteImpl
 * @see es.eina.tfg.model.impl.RouteModelImpl
 * @generated
 */
public interface RouteModel extends BaseModel<Route> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a route model instance should use the {@link Route} interface instead.
     */

    /**
     * Returns the primary key of this route.
     *
     * @return the primary key of this route
     */
    public long getPrimaryKey();

    /**
     * Sets the primary key of this route.
     *
     * @param primaryKey the primary key of this route
     */
    public void setPrimaryKey(long primaryKey);

    /**
     * Returns the route ID of this route.
     *
     * @return the route ID of this route
     */
    public long getRouteId();

    /**
     * Sets the route ID of this route.
     *
     * @param routeId the route ID of this route
     */
    public void setRouteId(long routeId);

    /**
     * Returns the type of this route.
     *
     * @return the type of this route
     */
    @AutoEscape
    public String getType();

    /**
     * Sets the type of this route.
     *
     * @param type the type of this route
     */
    public void setType(String type);

    /**
     * Returns the name of this route.
     *
     * @return the name of this route
     */
    @AutoEscape
    public String getName();

    /**
     * Sets the name of this route.
     *
     * @param name the name of this route
     */
    public void setName(String name);

    /**
     * Returns the description of this route.
     *
     * @return the description of this route
     */
    @AutoEscape
    public String getDescription();

    /**
     * Sets the description of this route.
     *
     * @param description the description of this route
     */
    public void setDescription(String description);

    /**
     * Returns the author ID of this route.
     *
     * @return the author ID of this route
     */
    public long getAuthorId();

    /**
     * Sets the author ID of this route.
     *
     * @param authorId the author ID of this route
     */
    public void setAuthorId(long authorId);

    /**
     * Returns the is public of this route.
     *
     * @return the is public of this route
     */
    public boolean getIsPublic();

    /**
     * Returns <code>true</code> if this route is is public.
     *
     * @return <code>true</code> if this route is is public; <code>false</code> otherwise
     */
    public boolean isIsPublic();

    /**
     * Sets whether this route is is public.
     *
     * @param isPublic the is public of this route
     */
    public void setIsPublic(boolean isPublic);

    /**
     * Returns the starting time of this route.
     *
     * @return the starting time of this route
     */
    public Date getStartingTime();

    /**
     * Sets the starting time of this route.
     *
     * @param startingTime the starting time of this route
     */
    public void setStartingTime(Date startingTime);

    /**
     * Returns the creation time of this route.
     *
     * @return the creation time of this route
     */
    public Date getCreationTime();

    /**
     * Sets the creation time of this route.
     *
     * @param creationTime the creation time of this route
     */
    public void setCreationTime(Date creationTime);

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    @Override
    public Object clone();

    @Override
    public int compareTo(es.eina.tfg.model.Route route);

    @Override
    public int hashCode();

    @Override
    public CacheModel<es.eina.tfg.model.Route> toCacheModel();

    @Override
    public es.eina.tfg.model.Route toEscapedModel();

    @Override
    public es.eina.tfg.model.Route toUnescapedModel();

    @Override
    public String toString();

    @Override
    public String toXmlString();
}
