package es.eina.tfg.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Power service. Represents a row in the &quot;GL_Power&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link es.eina.tfg.model.impl.PowerModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link es.eina.tfg.model.impl.PowerImpl}.
 * </p>
 *
 * @author adelrioj
 * @see Power
 * @see es.eina.tfg.model.impl.PowerImpl
 * @see es.eina.tfg.model.impl.PowerModelImpl
 * @generated
 */
public interface PowerModel extends BaseModel<Power> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a power model instance should use the {@link Power} interface instead.
     */

    /**
     * Returns the primary key of this power.
     *
     * @return the primary key of this power
     */
    public long getPrimaryKey();

    /**
     * Sets the primary key of this power.
     *
     * @param primaryKey the primary key of this power
     */
    public void setPrimaryKey(long primaryKey);

    /**
     * Returns the measurement ID of this power.
     *
     * @return the measurement ID of this power
     */
    public long getMeasurementId();

    /**
     * Sets the measurement ID of this power.
     *
     * @param measurementId the measurement ID of this power
     */
    public void setMeasurementId(long measurementId);

    /**
     * Returns the race ID of this power.
     *
     * @return the race ID of this power
     */
    public long getRaceId();

    /**
     * Sets the race ID of this power.
     *
     * @param raceId the race ID of this power
     */
    public void setRaceId(long raceId);

    /**
     * Returns the user ID of this power.
     *
     * @return the user ID of this power
     */
    public long getUserId();

    /**
     * Sets the user ID of this power.
     *
     * @param userId the user ID of this power
     */
    public void setUserId(long userId);

    /**
     * Returns the user uuid of this power.
     *
     * @return the user uuid of this power
     * @throws SystemException if a system exception occurred
     */
    public String getUserUuid() throws SystemException;

    /**
     * Sets the user uuid of this power.
     *
     * @param userUuid the user uuid of this power
     */
    public void setUserUuid(String userUuid);

    /**
     * Returns the device ID of this power.
     *
     * @return the device ID of this power
     */
    public long getDeviceId();

    /**
     * Sets the device ID of this power.
     *
     * @param deviceId the device ID of this power
     */
    public void setDeviceId(long deviceId);

    /**
     * Returns the sensor ID of this power.
     *
     * @return the sensor ID of this power
     */
    public long getSensorId();

    /**
     * Sets the sensor ID of this power.
     *
     * @param sensorId the sensor ID of this power
     */
    public void setSensorId(long sensorId);

    /**
     * Returns the time of this power.
     *
     * @return the time of this power
     */
    public Date getTime();

    /**
     * Sets the time of this power.
     *
     * @param time the time of this power
     */
    public void setTime(Date time);

    /**
     * Returns the sensor mode of this power.
     *
     * @return the sensor mode of this power
     */
    @AutoEscape
    public String getSensorMode();

    /**
     * Sets the sensor mode of this power.
     *
     * @param sensorMode the sensor mode of this power
     */
    public void setSensorMode(String sensorMode);

    /**
     * Returns the level of this power.
     *
     * @return the level of this power
     */
    public int getLevel();

    /**
     * Sets the level of this power.
     *
     * @param level the level of this power
     */
    public void setLevel(int level);

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    @Override
    public Object clone();

    @Override
    public int compareTo(es.eina.tfg.model.Power power);

    @Override
    public int hashCode();

    @Override
    public CacheModel<es.eina.tfg.model.Power> toCacheModel();

    @Override
    public es.eina.tfg.model.Power toEscapedModel();

    @Override
    public es.eina.tfg.model.Power toUnescapedModel();

    @Override
    public String toString();

    @Override
    public String toXmlString();
}
