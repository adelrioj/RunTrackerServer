package es.eina.tfg.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import es.eina.tfg.service.persistence.PowerPK;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Power service. Represents a row in the &quot;GL_Power&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link es.eina.tfg.model.impl.PowerModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link es.eina.tfg.model.impl.PowerImpl}.
 * </p>
 *
 * @author adelrioj
 * @see Power
 * @see es.eina.tfg.model.impl.PowerImpl
 * @see es.eina.tfg.model.impl.PowerModelImpl
 * @generated
 */
public interface PowerModel extends BaseModel<Power> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a power model instance should use the {@link Power} interface instead.
     */

    /**
     * Returns the primary key of this power.
     *
     * @return the primary key of this power
     */
    public PowerPK getPrimaryKey();

    /**
     * Sets the primary key of this power.
     *
     * @param primaryKey the primary key of this power
     */
    public void setPrimaryKey(PowerPK primaryKey);

    /**
     * Returns the id measurement of this power.
     *
     * @return the id measurement of this power
     */
    public long getIdMeasurement();

    /**
     * Sets the id measurement of this power.
     *
     * @param idMeasurement the id measurement of this power
     */
    public void setIdMeasurement(long idMeasurement);

    /**
     * Returns the id race of this power.
     *
     * @return the id race of this power
     */
    public Long getIdRace();

    /**
     * Sets the id race of this power.
     *
     * @param idRace the id race of this power
     */
    public void setIdRace(Long idRace);

    /**
     * Returns the id device of this power.
     *
     * @return the id device of this power
     */
    public long getIdDevice();

    /**
     * Sets the id device of this power.
     *
     * @param idDevice the id device of this power
     */
    public void setIdDevice(long idDevice);

    /**
     * Returns the id sensor of this power.
     *
     * @return the id sensor of this power
     */
    public long getIdSensor();

    /**
     * Sets the id sensor of this power.
     *
     * @param idSensor the id sensor of this power
     */
    public void setIdSensor(long idSensor);

    /**
     * Returns the time of this power.
     *
     * @return the time of this power
     */
    public Date getTime();

    /**
     * Sets the time of this power.
     *
     * @param time the time of this power
     */
    public void setTime(Date time);

    /**
     * Returns the sensor mode of this power.
     *
     * @return the sensor mode of this power
     */
    @AutoEscape
    public String getSensorMode();

    /**
     * Sets the sensor mode of this power.
     *
     * @param sensorMode the sensor mode of this power
     */
    public void setSensorMode(String sensorMode);

    /**
     * Returns the level of this power.
     *
     * @return the level of this power
     */
    public int getLevel();

    /**
     * Sets the level of this power.
     *
     * @param level the level of this power
     */
    public void setLevel(int level);

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    @Override
    public Object clone();

    @Override
    public int compareTo(es.eina.tfg.model.Power power);

    @Override
    public int hashCode();

    @Override
    public CacheModel<es.eina.tfg.model.Power> toCacheModel();

    @Override
    public es.eina.tfg.model.Power toEscapedModel();

    @Override
    public es.eina.tfg.model.Power toUnescapedModel();

    @Override
    public String toString();

    @Override
    public String toXmlString();
}
