package es.eina.tfg.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the Race service. Represents a row in the &quot;GL_Race&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link es.eina.tfg.model.impl.RaceModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link es.eina.tfg.model.impl.RaceImpl}.
 * </p>
 *
 * @author adelrioj
 * @see Race
 * @see es.eina.tfg.model.impl.RaceImpl
 * @see es.eina.tfg.model.impl.RaceModelImpl
 * @generated
 */
public interface RaceModel extends BaseModel<Race> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a race model instance should use the {@link Race} interface instead.
     */

    /**
     * Returns the primary key of this race.
     *
     * @return the primary key of this race
     */
    public long getPrimaryKey();

    /**
     * Sets the primary key of this race.
     *
     * @param primaryKey the primary key of this race
     */
    public void setPrimaryKey(long primaryKey);

    /**
     * Returns the id race of this race.
     *
     * @return the id race of this race
     */
    public long getIdRace();

    /**
     * Sets the id race of this race.
     *
     * @param idRace the id race of this race
     */
    public void setIdRace(long idRace);

    /**
     * Returns the id user of this race.
     *
     * @return the id user of this race
     */
    public long getIdUser();

    /**
     * Sets the id user of this race.
     *
     * @param idUser the id user of this race
     */
    public void setIdUser(long idUser);

    /**
     * Returns the id route of this race.
     *
     * @return the id route of this race
     */
    public long getIdRoute();

    /**
     * Sets the id route of this race.
     *
     * @param idRoute the id route of this race
     */
    public void setIdRoute(long idRoute);

    /**
     * Returns the type of this race.
     *
     * @return the type of this race
     */
    @AutoEscape
    public String getType();

    /**
     * Sets the type of this race.
     *
     * @param type the type of this race
     */
    public void setType(String type);

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    @Override
    public Object clone();

    @Override
    public int compareTo(es.eina.tfg.model.Race race);

    @Override
    public int hashCode();

    @Override
    public CacheModel<es.eina.tfg.model.Race> toCacheModel();

    @Override
    public es.eina.tfg.model.Race toEscapedModel();

    @Override
    public es.eina.tfg.model.Race toUnescapedModel();

    @Override
    public String toString();

    @Override
    public String toXmlString();
}
